<1.13.1.95.11.19.06.fl0c+@andrew.cmu.edu.0>
Type:     cmu.andrew.org.cmu-hci
Topic:    PS Seminar
Dates:    16-Jan-95
Time:     <stime>3:30</stime> - <etime>5:00 PM</etime>
PostedBy: F. Javier Lerch on 13-Jan-95 at 11:19 from andrew.cmu.edu
Abstract: 
  PS SEMINAR

                          <speaker>Michael A. Cusumano</speaker>
                 Massachusetts Institute of Technology
                      Sloan School of Management

   Microsoft:  Rethinking the Process of Software Product Development

                       Monday, January 16, 1995
                                <location>WEH 5409</location>
                             <stime>3:30</stime> - <etime>5:00 PM</etime>
******************************************************************************

******************************************************************************

<paragraph><sentence>This talk focuses on recent initiatives within the Microsoft Corporation
to rethink conventional approaches to managing the development of large-scale
software products, which now include many PC software products as well as
systems for larger computers</sentence>.  <sentence>It will summarize findings from a forthcoming
book titled MICROSOFT SECRETS (Free Press, 1995), by Michael Cusumano and
Richard Selby</sentence>.  <sentence>In markets with rapidly evolving technologies and uncertain
customer requirements, projects that follow a typical sequential or waterfall
type of process will invariably be late and have many defects, and the designs
probably will not effectively meet customer needs</sentence>.  <sentence>Furthermore, as the
size and complexity of products have grown, the number of people involved
even in PC software projects has grown, creating another problem:  how to
make large teams, which are now necessary to build software systems in
relatively short periods of time, work like small teams -- which are the best
way to build any complex product</sentence>.</paragraph>

<paragraph><sentence>A conventional waterfall process views product development as a sequential
series of phases or steps that take developers from an initial high-level
design through system testing and product shipment</sentence>. <sentence>In this approach, 
designers try to write a specification that is as complete as possible to 
reduce the need for unnecessary rework later on</sentence>. <sentence>They then divide the 
specification into pieces or modules in a more detailed design, and then 
assign different individuals or teams to build these pieces in parallel</sentence>.  
<sentence>Each team tests and debugs (finds and fixes errors) in its pieces</sentence>.  <sentence>Only in 
the last phase of the project, which could range from a few months to a few 
years for a large system, do the designers, developers, and testers try to 
integrate the pieces and test the entire system</sentence>. <sentence>Invariably, the integration 
and system testing do not go well because the pieces of the product have 
significantly changed during the project</sentence>.  <sentence>Moreover, these changes are almost 
always necessary to improve the design</sentence>.  <sentence>Problems with the waterfall approach 
become even worse when many people are required to build a large-scale complex
system product because of the difficulties that result in maintaining the 
integrity of the design as well as facilitating coordination and communication</sentence>.</paragraph>

<paragraph><sentence>Since 1989-1990, leading Microsoft projects, beginning with the Excel group,
have been introducing a new process that we call synch and stabilize</sentence>.  <sentence>The
development team begins by outlining the product in sufficient depth to set
priorities in terms of desired features but without trying to decide all the
details of each feature</sentence>.  <sentence>They divide the product and the project into parts
(features and small feature teams), and divide the project schedule into three
or four milestone junctures (sub-projects) of prioritized features</sentence>.  <sentence>A series
of small teams then goes through a complete cycle of development, testing, and
debugging in each milestone phase</sentence>. <sentence>Moreover,  Microsoft scales up the
small-team approach by having all members of all teams synchronize their work
by building the product, and by finding and fixing errors, on a daily and
weekly basis</sentence>.  <sentence>When most serious problems are fixed, they stabilize (agree
not to change) the most important pieces and proceed to the next milestone or
to the ship decision</sentence>.</paragraph>

<paragraph><sentence>This process addresses a basic problem common to many firms in highly
competitive, rapidly changing industries</sentence>. <sentence>Most new products can no longer be
built by just two or three people; they require much larger teams</sentence>.
<sentence>Furthermore, the members of the team build components that are interdependent
but difficult to define accurately in the early stages of  the development
cycle</sentence>.  <sentence>In these situations, the project must find a way to proceed that
structures and coordinates what individuals and individual teams do, while
allowing them enough flexibility to evolve the product's features in stages
during the development</sentence>.</paragraph>

-----------------------------------------------------------------

        Biographical Sketch of <speaker>Michael A. Cusumano</speaker>

<paragraph><sentence><speaker>Michael A. Cusumano</speaker> is an Associate Professor of Management at the
Massachusetts Institute of Technology's Sloan School of Management</sentence>.  <sentence>He
specializes in competitive strategy and technology management in the
automobile and computer industries, and does much of his work on Japanese
companies and comparisons with U.S. firms</sentence>.  <sentence><speaker>Professor Cusumano</speaker> received a B.A.
degree from Princeton University in 1976 and a Ph.D. from Harvard University
in 1984</sentence>.  <sentence>He is also fluent in Japanese and lived and worked in Japan for
six years, during which time he held two Fulbright fellowships at the
University of Tokyo and was a visiting professor at Hitotsubashi University</sentence>.
<sentence>Before joining M.I.T. in 1986, he completed a two-year postdoctoral fellowship
in the Production and Operations Management Area at the Harvard Business
School</sentence>.  <sentence>In addition to research and teaching at M.I.T., Professor Cusumano
has lectured and worked as a consultant for leading firms around the world,
including Alcatel, AT&T, Bell Communications Research, DEC, Fiat, General
Electric, IBM, Motorola, Northern Telecom, Tandem Computer, Robert Bosch, and
Siemens</sentence>.</paragraph>

<paragraph><sentence><speaker>Professor Cusumano</speaker> is the author or co-author of three books</sentence>. <sentence>The
Japanese Automobile Industry:  Technology and Management at Nissan and Toyota
(Harvard, 1985) traces the evolution of Japanese innovations in production
management and quality control as well as Japan's remarkable success in
managing technology transfer and product development in this industry</sentence>.  
<sentence>Japan's Software Factories:  A Challenge to U.S. Management (Oxford 
University Press, 1991) examines how Japanese firms, led by Hitachi, Toshiba, 
NEC, and Fujitsu, have introduced structured factory-like organizations, 
tools, and methods for managing complex, large-scale software development 
projects</sentence>. <sentence>Microsoft Secrets (Free Press/Simon & Schuster, forthcoming 1995, 
with Richard Selby) examines the evolution of the principles that lay behind 
Microsoft's competitive strategy, organization and management systems, and 
process for software product development and quality control</sentence>.  <sentence>Professor 
Cusumano has also written articles on Japanese video-recorder development and 
consumer-electronics competition, manufacturing innovation and product 
development in the automobile industry, as well as Japanese technological 
innovation and entrepreneurship</sentence>.</paragraph>

<paragraph><sentence><speaker>Professor Cusumano</speaker> is currently a visiting professor at the Institute for
Advanced Computer Studies, Dept. of Computer Science, University of
Maryland, College Park</sentence>.</paragraph>
Current address:        3401 38th St. N.W., Apt. 803, Washington, D.C. 20016
Tel. and Fax:           202-686-1859 (call before faxing)
 E-mail:                 mcusuman@sloan.mit.edu@internet
MIT Fax:                617-253-2660
MIT Secretary           617-253-9455

- Javier

Carnegie Mellon University
(412) 268-5042
